#!/usr/bin/perl

##########################################################
##Dan Pass | 03/01/12              			##
##daniel.antony.pass@googlemail.com			##
##for use in generating html talbes from MetaABC output ##
##########################################################

use strict;
use warnings;

#usage e.g.: ./gen_taxa_html output_unique.fa.m8.blastn_family_read_count html_template

my @files = @ARGV;

foreach my $file (@files){
open TAXA, "$file";
open TEMPLATE, "html_template";

$file =~ s/.+blastn_(.+)_read_count/$1/;
open OUTFILE, ">$file.html";

my @fields;
my $size;

while (my $line = <TAXA>){
        chomp $line;
        if ($line =~ /^Ass/){
                last;
        }else{
        my @cols = split(/\t/, $line);
        push @fields, "\{$file:\"$cols[1]\",abundance:$cols[2]\}";
	$size++;	
	}
}
close TAXA;

select OUTFILE;
while (<TEMPLATE>){
	if (/XXTAXALEVELXX/){
		s/XXTAXALEVELXX/$file/;
		print;
	}elsif (/(^var chartData)/){
		print "$1 =\[";
		my $count = 0;
		my $last = $size -1;
		foreach my $in (@fields){
			print "$in,\n";
			$count++;
			if ($count == $last ) {
				print "$in\]\n";
				last;
				}
			}
			#if ($count eq $#@fields){
				#print "count: $count, fields: $#@fields\n";
				#last;
				#}
		#print "$fields[_]\n";
		#print "$1 =[", @fields, "]\n";
	}else{ print;
	}
}	
close OUTFILE;
}
